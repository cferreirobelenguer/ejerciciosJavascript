
/*El Grinch est√° abriendo las cartas que iban a Santa Claus y las est√° dejando hechas un l√≠o. üò±

Las cartas son una cadena de texto que incluyen regalos y par√©ntesis ().

Para saber si una carta es v√°lida ‚úÖ, debes comprobar que los par√©ntesis cierran correctamente y que, adem√°s, no vayan vac√≠os.

¬°Pero ojo! Porque el Grinch ha dejado llaves { y corchetes [ dentro de los par√©ntesis que hacen que no sean v√°lidas. Por suerte s√≥lo los ha dejado en medio de los par√©ntesis...

Ejemplos:

"bici coche (bal√≥n) bici coche peluche" // -> ‚úÖ
"(mu√±eca) consola bici" // ‚úÖ

"bici coche (bal√≥n bici coche" // -> ‚ùå
"peluche (bici [coche) bici coche bal√≥n" // -> ‚ùå
"(peluche {) bici" // -> ‚ùå
"() bici" // ‚ùå

Crea una funci√≥n que pas√°ndole el texto de la carta, devuelva true si es v√°lida y false si no lo es. ¬°Y acaba con la travesura del Grinch!

*/
const validar=(carta:string)=>{
    let validada:boolean=false;
    //Tiene que incluir ambos par√©ntesis para ser validado
    if(carta.includes("(")&&(carta.includes(")"))){
        //cojo las posiciones de los par√©ntesis
        let posicion1:number=carta.indexOf("(")
        let posicion2:number=carta.indexOf(")")
        //cojo lo de dentro de los par√©ntesis sin incluir ambos para ver lo que hay dentro
        let palabra:string=carta.substring(posicion1+1,posicion2)
        console.log(palabra)
        
        if(palabra!=""){
            //Si lo de dentro de los par√©ntesis tiene llaves o corchetes no se valida
            if(palabra.includes("}")||palabra.includes("{")||palabra.includes("]")||palabra.includes("[")){
                validada=false
            }else{
                //Si de dentro de los par√©ntesis es palabra sin llaves y corchetes se valida
                validada=true
            }
        }else{
            //Si no tiene nada lo que hay entre los par√©ntesis no se valida
            validada=false
        }
    }else{
        //Si no se cierra el par√©ntesis o no tiene par√©ntesis no se valida
        validada=false
    }

    return validada
}

console.log(validar("() bici"))